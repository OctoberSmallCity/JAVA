



     1.事务是什么
	    
		 一系列操作
		 要么全部执行,要么不执行;
		 满足ACID特性;
		 
		 
	 2.ACID特性为何物
	 
	     (1)原子性(Atomicity)
		   
		     事务中的操作要么全部成功执行,要么全部失败;
			 
			 回滚用日志来实现;
			 
		 (2)一致性(Consistency)
		 
		     从一个一致性状态转向另一个一致性状态;
			 
			 A:1000 B:1000,1000+1000 = 2000
			 A向B转账500,500+1500 = 2000
			 
			 
		 (3)隔离性(Isolation)
		    
			 不允许同时对一张数据库表进行操作;
			 多个并发事务的时候需要隔离性;
			 
		 (4)持久性(Durability)
		 
		     对数据库修改成功后,要永久保持修改状态;
			 系统发生崩溃时,执行的事务也必须要保存,可以使用数据库备份和恢复来实现;
			 应对数据库崩溃的情况;
			 
			 
	 3.导致的并发一致性问题
	 
	     (1)丢失修改
		     
			 事务A和B同时对一个数据进行修改;
			 A先进行了修改,B随后进行了修改;
			 B的修改覆盖了A的修改;
			 A修改的数据丢失;
			 
		 (2)脏读

             针对未提交的数据
			 一个事务读取到了另一个事务未提交的数据;

             A的工资为1000元,业务员将A的工资改成了5000;
             A读取自己的工资发现变成了5000;
             业务员发现操作错误,回滚了事务,又变成了1000;

             A读取到脏数据5000;			 
		     
			 解决:
			 事务隔离级别调整成读已提交(Read_Committed)
			 
			 
		 (3)不可重复读
		     
			 A事务需要多次读取数据,A还没读取完,B事务此时对其做了修改,再次读取时导致两次读取的数据不一致;
			 
		 	 两次相同的查询,得到不同的结果;
			 
			 解决:
			 可重复读(Repeated Read)
			 
		 (4)幻读
		 
		     A读取满足条件的数据时,此时B事务新增一条数据符合A的查询条件,A再次查询时,看到了新增的数据;
			 
			 解决:
			 串行化
			 
	 4.解决问题-事务的隔离级别

         (1)串行化

             事务一个接着一个执行;
             锁机制;			 
	 		 